trigger:
  - master

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Pipeline "variable container" that holds the Azure Blob Storage account information
# (for deploying our application into a Container).
variables:
- group: mozzarella-variables

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

jobs:

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

- job: cypress
  pool:
    vmImage: "ubuntu-latest"

  # Utilise the same Cypress setup that we run locally as part of our Docker
  # configuration. This gives us consistent visual regression results independent
  # of environment.
  #
  # @see https://github.com/cypress-io/cypress-docker-images
  # @see https://docs.cypress.io/examples/examples/docker.html#Images
  #
  # Everything Cypress related gets run in this container. Once we successfully
  # complete the test we move on with Azures generic Ubuntu image.
  container: cypress/browsers:node10.16.0-chrome76
  displayName: Cypress tests
  # dependsOn: Nothing... (first step in the pipeline sequence).
  steps:

  - script: |
      npm install
    displayName: "npm install"

  - script: |
      npm run test:cypress:ci
    displayName: "e2e tests"

  - script: |
      npm run test:visual:ci:exe
    displayName: "visual tests"

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

- job: setup_deploy
  pool:
    vmImage: "ubuntu-latest"
  displayName: Setup / Deploy
  dependsOn: cypress
  steps:

  - task: NodeTool@0
    inputs:
      versionSpec: "10.x"
    displayName: "install node.js"

  - script: |
      npm install
    displayName: "npm install"

  # We run our unit test kinda late (after our Cypress stuff) because we need the
  # version of Chromium supplied with Ubuntu. Cypress does have its own Chrome
  # binary but its difficult to consistently get Karma to hook into its (not
  # native) reference.
  - script: |
      npm run test:unit:ci
    displayName: "unit tests"

  - script: |
      npm run build -- --prod
    displayName: "build application"

  # We are no longer directly deploying as part of the build process, instead we
  # publish an artefact for consumption by multiple environments.
  # - script: |
  #     az storage blob upload-batch --account-name="$(azureStorageAccount)" --account-key="$(azureStorageKey)" -s="./dist/mozzarella" -d="\$web"
  #   displayName: "deploy to container"

  - publish: ./dist/mozzarella
    artifact: mozzarella_build_artifact

